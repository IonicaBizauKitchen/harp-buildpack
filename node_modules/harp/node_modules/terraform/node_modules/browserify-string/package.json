{
  "name": "browserify-string",
  "version": "0.0.3",
  "description": "Run browserify over a string or an inline function",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/eugeneware/browserify-string"
  },
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com"
  },
  "license": "BSD",
  "devDependencies": {
    "chai": "~1.7.0",
    "mocha": "~1.11.0",
    "domready": "~0.2.11"
  },
  "peerDependencies": {
    "browserify": "~2.20.0"
  },
  "dependencies": {
    "through": "~2.3.4"
  },
  "directories": {
    "test": "test"
  },
  "keywords": [
    "browser",
    "browserify",
    "string",
    "function"
  ],
  "readme": "# browserify-string\n\nUse [browserify](https://github.com/substack/node-browserify) programatically to deal with code strings or inline functions.\n(By default browserify requires that you have your code in a file.)\n\n## Installation\n\nInstall via npm:\n\n```\n$ npm install browserify-string\n```\n\n## Examples\n\nTo browserify an inline function:\n\n``` js\nvar browserifyFn = require('browserify-string');\nfunction browserCode() {\n  var domready = require('domready'); // client-side code dependency\n  domready(function () {\n    console.log('ready');\n  });\n}\nbrowserifyFn(browserCode)\n  .bundle(function (err, src) {\n    if (err) return done(err);\n    // Code should have the browser code and the dependency\n    expect(src).to.include(browserCode.toString());\n    expect(src).to.include('domready (c) Dustin Diaz 2012 - License MIT');\n    done();\n  });\n```\nTo browserify some code as a string:\n\n``` js\nvar browserifyFn = require('browserify-string');\nfunction browserCode() {\n  var domready = require('domready'); // client-side code dependency\n  domready(function () {\n    console.log('ready');\n  });\n}\nbrowserifyFn(browserCode.toString())\n  .bundle(function (err, src) {\n    if (err) return done(err);\n    // Code should have the browser code and the dependency\n    expect(src).to.include(browserCode.toString());\n    expect(src).to.include('domready (c) Dustin Diaz 2012 - License MIT');\n    done();\n  });\n```\n\nThe `require('browserify-string')` returns a browserify instance that you can\nmethod chain on to add transforms, etc.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/eugeneware/browserify-string/issues"
  },
  "homepage": "https://github.com/eugeneware/browserify-string",
  "_id": "browserify-string@0.0.3",
  "_from": "browserify-string@0.0.3"
}
